{
    "openapi": "3.0.2",
    "info": {
        "title": "cold-war-back",
        "description": "ColdWar API backend",
        "version": "0.0.2"
    },
    "paths": {
        "/api/v1/user/login": {
            "post": {
                "tags": ["user"],
                "summary": "Authenticate user",
                "description": "Send for autorization:\n\n- **password**\n- **login**",
                "operationId": "login_api_v1_user_login_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_login_api_v1_user_login_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK. As response you receive access token. Use it for bearer autentication.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError400"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/game/data/static": {
            "get": {
                "tags": ["game_data"],
                "summary": "Static game data",
                "description": "Get all static game data (cards data).\n    ",
                "operationId": "get_static_data_api_v1_game_data_static_get",
                "responses": {
                    "200": {
                        "description": "OK. As response you recieve static game data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GameCards"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/game/data/current": {
            "post": {
                "tags": ["game_data"],
                "summary": "Current game data",
                "description": "Get all current game data (game statement) for current user.\n    ",
                "operationId": "get_current_data_api_v1_game_data_current_post",
                "responses": {
                    "200": {
                        "description": "OK. As response you recieve current game data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentGameData"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError401"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError404"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "OAuth2PasswordBearer": []
                }]
            }
        },
        "/api/v1/game/create": {
            "post": {
                "tags": ["game"],
                "summary": "Create new game",
                "description": "Create new game.\n    ",
                "operationId": "create_new_game_api_v1_game_create_post",
                "responses": {
                    "201": {
                        "description": "Created. New game object created in db.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError401"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "OAuth2PasswordBearer": []
                }]
            }
        },
        "/api/v1/game/preset/faction": {
            "patch": {
                "tags": ["game"],
                "summary": "Preset faction before game start",
                "description": "Preset faction of player\n    ",
                "operationId": "preset_faction_api_v1_game_preset_faction_patch",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Preset faction",
                        "allOf": [{
                            "$ref": "#/components/schemas/Faction"
                        }]
                    },
                    "name": "q",
                    "in": "query"
                }],
                "responses": {
                    "200": {
                        "description": "Ok. Faction is setted.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError401"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError404"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError409"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "OAuth2PasswordBearer": []
                }]
            }
        },
        "/api/v1/game/next_turn": {
            "patch": {
                "tags": ["game"],
                "summary": "Go to next turn",
                "description": "Change turn number to next\n    ",
                "operationId": "next_turn_api_v1_game_next_turn_patch",
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError401"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError404"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError409"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "OAuth2PasswordBearer": []
                }]
            }
        },
        "/api/v1/game/next_phase": {
            "patch": {
                "tags": ["game"],
                "summary": "Go to next phase",
                "description": "Change phase to next\n    ",
                "operationId": "next_phase_api_v1_game_next_phase_patch",
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError401"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError404"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError409"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "OAuth2PasswordBearer": []
                }]
            }
        },
        "/api/v1/game/phase/briefing/analyst_look": {
            "patch": {
                "tags": ["game"],
                "summary": "Look top three cards of group deck with analist ability",
                "description": "Look top three cards of group deck and change current game data\n    ",
                "operationId": "analyst_get_api_v1_game_phase_briefing_analyst_look_patch",
                "responses": {
                    "200": {
                        "description": "Ok. Data is changed",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError401"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError404"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError409"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "OAuth2PasswordBearer": []
                }]
            }
        },
        "/api/v1/game/phase/briefing/analyst_arrange": {
            "patch": {
                "tags": ["game"],
                "summary": "Arrange top three cards of group deck with analist ability",
                "description": "Arrange top three cards of group deck and change current game data\n    ",
                "operationId": "analyst_arrnge_api_v1_game_phase_briefing_analyst_arrange_patch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TopDeck"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Ok. Data is changed",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError401"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError404"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpError409"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "OAuth2PasswordBearer": []
                }]
            }
        }
    },
    "components": {
        "schemas": {
            "AgentCard": {
                "title": "AgentCard",
                "required": ["name", "agenda_lose", "agenda_win", "initiative"],
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/Agents"
                    },
                    "agenda_lose": {
                        "title": "Agenda Lose",
                        "type": "string"
                    },
                    "agenda_win": {
                        "title": "Agenda Win",
                        "type": "string"
                    },
                    "initiative": {
                        "title": "Initiative",
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    }
                },
                "description": "Agent card schema\n    ",
                "example": {
                    "name": "Master Spy",
                    "agenda_lose": "You claim the objective immediately",
                    "agenda_win": "Your opponent claims the objective immediately",
                    "initiative": 1
                }
            },
            "Agents": {
                "title": "Agents",
                "enum": ["Master Spy", "Deputy Director", "Double Agent", "Analyst", "Assassin", "Director"],
                "type": "string",
                "description": "Agent cards ids\n    "
            },
            "Body_login_api_v1_user_login_post": {
                "title": "Body_login_api_v1_user_login_post",
                "required": ["username", "password"],
                "type": "object",
                "properties": {
                    "grant_type": {
                        "title": "Grant Type",
                        "pattern": "password",
                        "type": "string"
                    },
                    "username": {
                        "title": "Username",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "type": "string"
                    },
                    "scope": {
                        "title": "Scope",
                        "type": "string",
                        "default": ""
                    },
                    "client_id": {
                        "title": "Client Id",
                        "type": "string"
                    },
                    "client_secret": {
                        "title": "Client Secret",
                        "type": "string"
                    }
                }
            },
            "CurrentGameData": {
                "title": "CurrentGameData",
                "required": ["players"],
                "type": "object",
                "properties": {
                    "game_steps": {
                        "title": "Game Steps",
                        "allOf": [{
                            "$ref": "#/components/schemas/GameSteps"
                        }],
                        "default": {
                            "game_turn": 0,
                            "is_game_end": false
                        }
                    },
                    "players": {
                        "title": "Players",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Player"
                        }
                    },
                    "game_decks": {
                        "title": "Game Decks",
                        "allOf": [{
                            "$ref": "#/components/schemas/GameDecks"
                        }],
                        "default": {
                            "group_deck": {
                                "deck_len": 0,
                                "pile": []
                            },
                            "objective_deck": {
                                "deck_len": 0,
                                "pile": []
                            }
                        }
                    }
                },
                "description": "Current game data\n    "
            },
            "Faction": {
                "title": "Faction",
                "enum": ["cia", "kgb"],
                "type": "string",
                "description": "Faction enumeration\n    "
            },
            "GameCards": {
                "title": "GameCards",
                "required": ["agent_cards", "group_cards", "objective_cards"],
                "type": "object",
                "properties": {
                    "agent_cards": {
                        "title": "Agent Cards",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AgentCard"
                        }
                    },
                    "group_cards": {
                        "title": "Group Cards",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupCard"
                        }
                    },
                    "objective_cards": {
                        "title": "Objective Cards",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ObjectiveCard"
                        }
                    }
                },
                "description": "Agents, group and objective cards schema\n    "
            },
            "GameDeck": {
                "title": "GameDeck",
                "type": "object",
                "properties": {
                    "deck_len": {
                        "title": "Deck Len",
                        "minimum": 0.0,
                        "type": "integer",
                        "default": 0
                    },
                    "pile": {
                        "title": "Pile",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    }
                },
                "description": "Game deck\n    ",
                "example": {
                    "deck_len": 0,
                    "pile": ["Ukranian War", "Something Else"]
                }
            },
            "GameDecks": {
                "title": "GameDecks",
                "type": "object",
                "properties": {
                    "group_deck": {
                        "title": "Group Deck",
                        "allOf": [{
                            "$ref": "#/components/schemas/GameDeck"
                        }],
                        "default": {
                            "deck_len": 0,
                            "pile": []
                        }
                    },
                    "objective_deck": {
                        "title": "Objective Deck",
                        "allOf": [{
                            "$ref": "#/components/schemas/GameDeck"
                        }],
                        "default": {
                            "deck_len": 0,
                            "pile": []
                        }
                    },
                    "mission_card": {
                        "$ref": "#/components/schemas/Objectives"
                    }
                },
                "description": "Game decks and mission card\n    "
            },
            "GameSteps": {
                "title": "GameSteps",
                "type": "object",
                "properties": {
                    "game_turn": {
                        "title": "Game Turn",
                        "minimum": 0.0,
                        "type": "integer",
                        "default": 0
                    },
                    "turn_phase": {
                        "$ref": "#/components/schemas/Phases"
                    },
                    "is_game_end": {
                        "title": "Is Game End",
                        "type": "boolean",
                        "default": false
                    }
                },
                "description": "Game steps\n    ",
                "example": {
                    "game_turn": 0,
                    "turn_phase": "briefing",
                    "is_game_end": false
                }
            },
            "GroupCard": {
                "title": "GroupCard",
                "required": ["name", "faction", "influence", "power"],
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/Groups"
                    },
                    "faction": {
                        "$ref": "#/components/schemas/GroupFactions"
                    },
                    "influence": {
                        "title": "Influence",
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "power": {
                        "title": "Power",
                        "type": "string"
                    }
                },
                "description": "Group card schema\n    ",
                "example": {
                    "name": "Guerilla",
                    "faction": "Military",
                    "influence": 1,
                    "power": "Send any other group card, whether ready or mobilized, to the discard pile"
                }
            },
            "GroupFactions": {
                "title": "GroupFactions",
                "enum": ["Economic", "Military", "Media", "Political", "Government"],
                "type": "string",
                "description": "Factions of group\n    "
            },
            "Groups": {
                "title": "Groups",
                "enum": ["Guerilla", "Militia", "Mercenaries", "Police", "Infantry", "Generals", "Workers", "Mafia", "Food companies", "Industry", "Oil Tycoons", "Bankers", "Students", "Trade Union", "Nationalists", "Fundamentalists", "Opposition", "Government", "Artists", "NGOs", "Phone company", "Newspapers", "Radio", "Television"],
                "type": "string",
                "description": "Groups cards ids\n    "
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "HttpError400": {
                "title": "HttpError400",
                "required": ["message"],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "description": "400 Bad Request\n    ",
                "example": {
                    "autorisation error": {
                        "detail": "Wrong login or password"
                    }
                }
            },
            "HttpError401": {
                "title": "HttpError401",
                "required": ["message"],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "description": "401 Unauthorized\n    ",
                "example": {
                    "detail": "Not authenticated"
                }
            },
            "HttpError404": {
                "title": "HttpError404",
                "required": ["message"],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "description": "404 Not Found\n    ",
                "example": {
                    "detail": "Cant find current game data in db. For start new game use /game/create endpoint"
                }
            },
            "HttpError409": {
                "title": "HttpError409",
                "required": ["message"],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "description": "409 Conflict\n    ",
                "example": {
                    "end game error": {
                        "detail": "Something wrong with client or server data"
                    }
                }
            },
            "Icons": {
                "title": "Icons",
                "enum": ["Economic", "Military", "Media", "Political"],
                "type": "string",
                "description": "Bias icons\n    "
            },
            "ObjectiveAbilities": {
                "title": "ObjectiveAbilities",
                "enum": ["Nobel Peace Prize", "Live Benefit", "Nuclear Escalation", "Space Race", "Olympic Games", "Summit Meeting"],
                "type": "string",
                "description": "Objectives with abilities cards ids\n    "
            },
            "ObjectiveCard": {
                "title": "ObjectiveCard",
                "required": ["name", "bias_icons", "population", "stability", "victory_points"],
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/Objectives"
                    },
                    "bias_icons": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Icons"
                        }
                    },
                    "population": {
                        "title": "Population",
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "special_ability": {
                        "title": "Special Ability",
                        "type": "string"
                    },
                    "stability": {
                        "title": "Stability",
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "victory_points": {
                        "title": "Victory Points",
                        "minimum": 0.0,
                        "type": "integer"
                    }
                },
                "description": "Objective card schema\n    ",
                "example": {
                    "name": "Egypt",
                    "bias_icons": ["Political", "Economic", "Media", "Military"],
                    "population": 4,
                    "stability": 11,
                    "victory_points": 20
                }
            },
            "Objectives": {
                "title": "Objectives",
                "enum": ["Nobel Peace Prize", "Live Benefit", "Nuclear Escalation", "Space Race", "Olympic Games", "Summit Meeting", "Egypt", "Vietnam", "Panama", "Angola", "Afghanistan", "Houndaras", "Libya", "Greece", "Turkey", "Iran", "Cuba", "Congo", "Czechoslovakia", "Chile", "Korea"],
                "type": "string",
                "description": "Objectives cards ids\n    "
            },
            "Phases": {
                "title": "Phases",
                "enum": ["briefing", "planning", "influence_struggle", "ceasefire", "debriefing", "detente"],
                "type": "string",
                "description": "Game phases\n    "
            },
            "Player": {
                "title": "Player",
                "required": ["player_cards"],
                "type": "object",
                "properties": {
                    "has_priority": {
                        "title": "Has Priority",
                        "type": "boolean"
                    },
                    "is_bot": {
                        "title": "Is Bot",
                        "type": "boolean"
                    },
                    "score": {
                        "title": "Score",
                        "maximum": 100.0,
                        "minimum": 0.0,
                        "type": "integer",
                        "default": 0
                    },
                    "faction": {
                        "$ref": "#/components/schemas/Faction"
                    },
                    "player_cards": {
                        "$ref": "#/components/schemas/PlayerCards"
                    },
                    "login": {
                        "title": "Login",
                        "type": "string"
                    },
                    "abilities": {
                        "title": "Abilities",
                        "type": "array",
                        "items": {
                            "anyOf": [{
                                "$ref": "#/components/schemas/ObjectiveAbilities"
                            }, {
                                "$ref": "#/components/schemas/Agents"
                            }]
                        },
                        "default": []
                    }
                },
                "description": "Player current data\n    ",
                "example": {
                    "has_priority": true,
                    "is_bot": false,
                    "score": 0,
                    "faction": "kgb",
                    "player_cards": {
                        "agent_cards": [{
                            "is_dead": false,
                            "is_in_play": true,
                            "is_in_vacation": false,
                            "is_revealed": false,
                            "name": "Master Spy"
                        }],
                        "group_cards": [{
                            "is_in_deck": true,
                            "is_in_play": false,
                            "is_active": true,
                            "position": 0,
                            "name": "Militia"
                        }],
                        "objective_cards": [{
                            "is_in_deck": false,
                            "is_in_play": true,
                            "is_active": false,
                            "name": "Egypt"
                        }]
                    },
                    "login": "DonaldTrump",
                    "abilities": ["Analist"]
                }
            },
            "PlayerAgentCards": {
                "title": "PlayerAgentCards",
                "type": "object",
                "properties": {
                    "dead": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Agents"
                        },
                        "default": []
                    },
                    "in_play": {
                        "$ref": "#/components/schemas/Agents"
                    },
                    "in_vacation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Agents"
                        },
                        "default": []
                    },
                    "revealed": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Agents"
                        },
                        "default": []
                    }
                },
                "description": "Agent cards data\n    ",
                "example": {
                    "dead": ["The Director"],
                    "is_in_vacation": ["Assassin"],
                    "is_revealed": ["_hidden", "_hidden", "_hidden", "_hidden"]
                }
            },
            "PlayerCards": {
                "title": "PlayerCards",
                "type": "object",
                "properties": {
                    "agent_cards": {
                        "title": "Agent Cards",
                        "allOf": [{
                            "$ref": "#/components/schemas/PlayerAgentCards"
                        }],
                        "default": {
                            "dead": [],
                            "in_vacation": [],
                            "revealed": []
                        }
                    },
                    "group_cards": {
                        "title": "Group Cards",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlayerGroupCard"
                        },
                        "default": []
                    },
                    "objective_cards": {
                        "title": "Objective Cards",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlayerObjectiveCard"
                        },
                        "default": []
                    }
                },
                "description": "Player cards\n    "
            },
            "PlayerGroupCard": {
                "title": "PlayerGroupCard",
                "required": ["name"],
                "type": "object",
                "properties": {
                    "is_in_deck": {
                        "title": "Is In Deck",
                        "type": "boolean",
                        "default": true
                    },
                    "is_in_play": {
                        "title": "Is In Play",
                        "type": "boolean",
                        "default": false
                    },
                    "is_active": {
                        "title": "Is Active",
                        "type": "boolean"
                    },
                    "pos_in_deck": {
                        "title": "Pos In Deck",
                        "maximum": 0.0,
                        "type": "integer"
                    },
                    "name": {
                        "$ref": "#/components/schemas/Groups"
                    }
                },
                "description": "Player group card\n    ",
                "example": {
                    "is_in_deck": true,
                    "is_in_play": false,
                    "pos_in_deck": 0,
                    "name": "Master Spy"
                }
            },
            "PlayerObjectiveCard": {
                "title": "PlayerObjectiveCard",
                "required": ["name"],
                "type": "object",
                "properties": {
                    "is_in_deck": {
                        "title": "Is In Deck",
                        "type": "boolean",
                        "default": true
                    },
                    "is_in_play": {
                        "title": "Is In Play",
                        "type": "boolean",
                        "default": false
                    },
                    "is_active": {
                        "title": "Is Active",
                        "type": "boolean"
                    },
                    "pos_in_deck": {
                        "title": "Pos In Deck",
                        "maximum": 0.0,
                        "type": "integer"
                    },
                    "name": {
                        "$ref": "#/components/schemas/Objectives"
                    }
                },
                "description": "Player objective card\n    ",
                "example": {
                    "is_in_deck": true,
                    "is_in_play": false,
                    "pos_in_deck": 0,
                    "name": "Master Spy"
                }
            },
            "Token": {
                "title": "Token",
                "required": ["access_token", "token_type"],
                "type": "object",
                "properties": {
                    "access_token": {
                        "title": "Access Token",
                        "type": "string"
                    },
                    "token_type": {
                        "title": "Token Type",
                        "type": "string"
                    }
                },
                "example": {
                    "access_token": "$2b$12$sifRrf5m7GM0hhFAF7BQ0.dIokOEZkfYOawlal8Jp/GeWh/4zn8la",
                    "token_type": "bearer"
                }
            },
            "TopDeck": {
                "title": "TopDeck",
                "required": ["top_cards"],
                "type": "object",
                "properties": {
                    "top_cards": {
                        "title": "Top Cards",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "List of id of top cards of any deck. The top card\nis a last card in list.",
                "example": {
                    "top_cards": ["Master Spy"]
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": ["loc", "msg", "type"],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "anyOf": [{
                                "type": "string"
                            }, {
                                "type": "integer"
                            }]
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "OAuth2PasswordBearer": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "scopes": {},
                        "tokenUrl": "/api/v1/user/login"
                    }
                }
            }
        }
    },
    "tags": [{
        "name": "user",
        "description": "Users api"
    }, {
        "name": "game_data",
        "description": "Game data api"
    }, {
        "name": "game",
        "description": "Game processing api"
    }]
}