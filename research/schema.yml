{
  "openapi": "3.0.2",
  "info": {
    "title": "cold-war-back",
    "description": "ColdWar API backend",
    "version": "0.0.2"
  },
  "paths": {
    "/api/v1/user/login": {
      "post": {
        "tags": ["user"],
        "summary": "Authenticate user",
        "description": "Send for autorization:\n\n- **password**\n- **email**",
        "operationId": "login_api_v1_user_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_v1_user_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK. As response you receive access token. Use it for bearer autentication.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError400"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/data/static": {
      "get": {
        "tags": ["game_data"],
        "summary": "Static game data",
        "description": "Get all static game data (cards data).\n    ",
        "operationId": "get_static_data_api_v1_game_data_static_get",
        "responses": {
          "200": {
            "description": "OK. As response you recieve static game data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCards"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/data/current": {
      "post": {
        "tags": ["game_data"],
        "summary": "Current game data",
        "description": "Get all current game data (game statement) for current user.\n    ",
        "operationId": "get_current_data_api_v1_game_data_current_post",
        "responses": {
          "200": {
            "description": "OK. As response you recieve current game data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentGameData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError404"
                }
              }
            }
          }
        },
        "security": [{
          "OAuth2PasswordBearer": []
        }]
      }
    },
    "/api/v1/game/create": {
      "post": {
        "tags": ["game"],
        "summary": "Create new game",
        "description": "Create new game.\n    ",
        "operationId": "create_new_game_api_v1_game_create_post",
        "responses": {
          "201": {
            "description": "Created. New game object created in db.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError401"
                }
              }
            }
          }
        },
        "security": [{
          "OAuth2PasswordBearer": []
        }]
      }
    },
    "/api/v1/game/preset": {
      "patch": {
        "tags": ["game"],
        "summary": "Preset faction and priority before game start",
        "description": "Preset faction and/or priotity for game\nif not seted before in this game",
        "operationId": "preset_api_v1_game_preset_patch",
        "parameters": [{
          "required": true,
          "schema": {
            "title": "Preset faction",
            "allOf": [{
              "$ref": "#/components/schemas/Faction"
            }]
          },
          "name": "faction",
          "in": "query"
        }, {
          "description": "- true - set priority to player\n- false - set priority to bot\n- random - set priority at random\n",
          "required": false,
          "schema": {
            "title": "Preset priority",
            "allOf": [{
              "$ref": "#/components/schemas/Priority"
            }],
            "description": "- true - set priority to player\n- false - set priority to bot\n- random - set priority at random\n",
            "default": "random"
          },
          "name": "priority",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Ok. Data is changed if not seted before.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError401"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [{
          "OAuth2PasswordBearer": []
        }]
      }
    },
    "/api/v1/game/next": {
      "patch": {
        "tags": ["game"],
        "summary": "Go to next turn or/and phase",
        "description": "Change turn number or phase to next\n    ",
        "operationId": "next_turn_api_v1_game_next_patch",
        "parameters": [{
          "required": false,
          "schema": {
            "title": "Turn",
            "enum": ["push"],
            "type": "string"
          },
          "name": "turn",
          "in": "query"
        }, {
          "required": false,
          "schema": {
            "title": "Phase",
            "enum": ["push"],
            "type": "string"
          },
          "name": "phase",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError401"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError409"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [{
          "OAuth2PasswordBearer": []
        }]
      }
    }
  },
  "components": {
    "schemas": {
      "AgentCard": {
        "title": "AgentCard",
        "required": ["name", "agenda_lose", "agenda_win", "initiative"],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "agenda_lose": {
            "title": "Agenda Lose",
            "type": "string"
          },
          "agenda_win": {
            "title": "Agenda Win",
            "type": "string"
          },
          "initiative": {
            "title": "Initiative",
            "exclusiveMinimum": 0.0,
            "type": "integer"
          }
        },
        "description": "Agent card schema\n    ",
        "example": {
          "name": "Master Spy",
          "agenda_lose": "You claim the objective immediately",
          "agenda_win": "Your opponent claims the objective immediately",
          "initiative": 1
        }
      },
      "Body_login_api_v1_user_login_post": {
        "title": "Body_login_api_v1_user_login_post",
        "required": ["username", "password"],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          }
        }
      },
      "Card": {
        "title": "Card",
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "description": "Base schema for cards\n    ",
        "example": {
          "name": "Master Spy"
        }
      },
      "CurrentGameData": {
        "title": "CurrentGameData",
        "required": ["players"],
        "type": "object",
        "properties": {
          "game_steps": {
            "title": "Game Steps",
            "allOf": [{
              "$ref": "#/components/schemas/GameSteps"
            }],
            "default": {
              "game_turn": 0,
              "is_game_end": false
            }
          },
          "players": {
            "title": "Players",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Player"
            }
          },
          "game_decks": {
            "title": "Game Decks",
            "allOf": [{
              "$ref": "#/components/schemas/GameDecks"
            }],
            "default": {
              "group_deck": {
                "deck_len": 24,
                "pile_len": 0,
                "pile": []
              },
              "objective_deck": {
                "deck_len": 21,
                "pile_len": 0,
                "pile": []
              }
            }
          }
        },
        "description": "Read or write current game data\n    "
      },
      "Faction": {
        "title": "Faction",
        "enum": ["cia", "kgb"],
        "type": "string",
        "description": "Faction enumeration\n    "
      },
      "GameCards": {
        "title": "GameCards",
        "required": ["agent_cards", "group_cards", "objective_cards"],
        "type": "object",
        "properties": {
          "agent_cards": {
            "title": "Agent Cards",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentCard"
            }
          },
          "group_cards": {
            "title": "Group Cards",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupCard"
            }
          },
          "objective_cards": {
            "title": "Objective Cards",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectiveCard"
            }
          }
        },
        "description": "Agents, group and objective cards schema\n    "
      },
      "GameDeck": {
        "title": "GameDeck",
        "type": "object",
        "properties": {
          "deck_len": {
            "title": "Deck Len",
            "minimum": 0.0,
            "type": "integer",
            "default": 0
          },
          "pile_len": {
            "title": "Pile Len",
            "minimum": 0.0,
            "type": "integer",
            "default": 0
          },
          "pile": {
            "title": "Pile",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Card"
            },
            "default": []
          }
        },
        "description": "Game decks\n    ",
        "example": {
          "deck_len": 0,
          "pile_len": 0,
          "pile": [{
            "name": "Master Spy"
          }, {
            "name": "Something Else"
          }]
        }
      },
      "GameDecks": {
        "title": "GameDecks",
        "type": "object",
        "properties": {
          "group_deck": {
            "title": "Group Deck",
            "allOf": [{
              "$ref": "#/components/schemas/GameDeck"
            }],
            "default": {
              "deck_len": 24,
              "pile_len": 0,
              "pile": []
            }
          },
          "objective_deck": {
            "title": "Objective Deck",
            "allOf": [{
              "$ref": "#/components/schemas/GameDeck"
            }],
            "default": {
              "deck_len": 21,
              "pile_len": 0,
              "pile": []
            }
          }
        },
        "description": "Game cards of all decs\n    "
      },
      "GameSteps": {
        "title": "GameSteps",
        "type": "object",
        "properties": {
          "game_turn": {
            "title": "Game Turn",
            "minimum": 0.0,
            "type": "integer",
            "default": 0
          },
          "turn_phase": {
            "$ref": "#/components/schemas/Phase"
          },
          "is_game_end": {
            "title": "Is Game End",
            "type": "boolean",
            "default": false
          }
        },
        "description": "Game steps schema\n    ",
        "example": {
          "game_turn": 0,
          "turn_phase": "briefing",
          "is_game_end": false
        }
      },
      "GroupCard": {
        "title": "GroupCard",
        "required": ["name", "faction", "influence", "power"],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "faction": {
            "title": "Faction",
            "enum": ["Military", "Economic", "Political", "Government", "Media"],
            "type": "string"
          },
          "influence": {
            "title": "Influence",
            "exclusiveMinimum": 0.0,
            "type": "integer"
          },
          "power": {
            "title": "Power",
            "type": "string"
          }
        },
        "description": "Group card schema\n    ",
        "example": {
          "name": "Guerilla",
          "faction": "Military",
          "influence": 1,
          "power": "Send any other group card, whether ready or mobilized, to the discard pile"
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "HttpError400": {
        "title": "HttpError400",
        "required": ["message"],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          }
        },
        "description": "400 Bad Request\n    ",
        "example": {
          "autorisation error": {
            "detail": "Wrong login or password"
          },
          "next turn phase error": {
            "detail": "Need at least one query parameter for this request"
          }
        }
      },
      "HttpError401": {
        "title": "HttpError401",
        "required": ["message"],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          }
        },
        "description": "401 Unauthorized\n    ",
        "example": {
          "detail": "Not authenticated"
        }
      },
      "HttpError404": {
        "title": "HttpError404",
        "required": ["message"],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          }
        },
        "description": "404 Not Found\n    ",
        "example": {
          "detail": "Cant find current game data in db. For start new game use /game/create endpoint"
        }
      },
      "HttpError409": {
        "title": "HttpError409",
        "required": ["message"],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          }
        },
        "description": "409 Conflict\n    ",
        "example": {
          "next turn phase error": {
            "detail": "This phase is last in a turn. Change turn number before get next phase"
          },
          "end game error": {
            "detail": "Something can't be changed, because game is end"
          }
        }
      },
      "ObjectiveCard": {
        "title": "ObjectiveCard",
        "required": ["name", "bias_icons", "population", "stability", "victory_points"],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "bias_icons": {
            "title": "Bias Icons",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": ["Economic", "Military", "Media", "Political"],
              "type": "string"
            }
          },
          "population": {
            "title": "Population",
            "exclusiveMinimum": 0.0,
            "type": "integer"
          },
          "special_ability": {
            "title": "Special Ability",
            "type": "string"
          },
          "stability": {
            "title": "Stability",
            "exclusiveMinimum": 0.0,
            "type": "integer"
          },
          "victory_points": {
            "title": "Victory Points",
            "minimum": 0.0,
            "type": "integer"
          }
        },
        "description": "Objective card schema\n    ",
        "example": {
          "name": "Egypt",
          "bias_icons": ["Political", "Economic", "Media", "Military"],
          "population": 4,
          "stability": 11,
          "victory_points": 20
        }
      },
      "Phase": {
        "title": "Phase",
        "enum": ["briefing", "planning", "influence_struggle", "ceasefire", "debriefing", "detente"],
        "type": "string",
        "description": "Game phases\n    "
      },
      "Player": {
        "title": "Player",
        "required": ["player_cards"],
        "type": "object",
        "properties": {
          "has_priority": {
            "title": "Has Priority",
            "type": "boolean"
          },
          "is_bot": {
            "title": "Is Bot",
            "type": "boolean"
          },
          "score": {
            "title": "Score",
            "maximum": 100.0,
            "minimum": 0.0,
            "type": "integer",
            "default": 0
          },
          "faction": {
            "title": "Faction",
            "enum": ["kgb", "cia"],
            "type": "string"
          },
          "player_cards": {
            "$ref": "#/components/schemas/PlayerCards"
          },
          "login": {
            "title": "Login",
            "type": "string"
          }
        },
        "description": "Player current data schema\n    ",
        "example": {
          "has_priority": true,
          "is_bot": false,
          "score": 0,
          "faction": "kgb",
          "player_cards": {
            "agent_cards": [{
              "name": "Master Spy"
            }],
            "group_cards": [{
              "name": "Director"
            }],
            "objective_cards": [{
              "is_dead": false,
              "is_in_play": true,
              "is_in_vacation": false,
              "is_revealed": false,
              "name": "Master Spy"
            }]
          },
          "login": "DonaldTrump"
        }
      },
      "PlayerAgentCard": {
        "title": "PlayerAgentCard",
        "required": ["name"],
        "type": "object",
        "properties": {
          "is_dead": {
            "title": "Is Dead",
            "type": "boolean",
            "default": false
          },
          "is_in_play": {
            "title": "Is In Play",
            "type": "boolean",
            "default": false
          },
          "is_in_vacation": {
            "title": "Is In Vacation",
            "type": "boolean",
            "default": false
          },
          "is_revealed": {
            "title": "Is Revealed",
            "type": "boolean",
            "default": false
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "example": {
          "is_dead": false,
          "is_in_play": true,
          "is_in_vacation": false,
          "is_revealed": false,
          "name": "Master Spy"
        }
      },
      "PlayerCards": {
        "title": "PlayerCards",
        "required": ["agent_cards"],
        "type": "object",
        "properties": {
          "agent_cards": {
            "title": "Agent Cards",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerAgentCard"
            }
          },
          "group_cards": {
            "title": "Group Cards",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Card"
            },
            "default": []
          },
          "objective_cards": {
            "title": "Objective Cards",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Card"
            },
            "default": []
          }
        },
        "description": "Player cards schema\n    "
      },
      "Priority": {
        "title": "Priority",
        "enum": ["true", "false", "random"],
        "type": "string",
        "description": "Priority enumeration\n    "
      },
      "Token": {
        "title": "Token",
        "required": ["access_token", "token_type"],
        "type": "object",
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string"
          },
          "token_type": {
            "title": "Token Type",
            "type": "string"
          }
        },
        "example": {
          "access_token": "$2b$12$sifRrf5m7GM0hhFAF7BQ0.dIokOEZkfYOawlal8Jp/GeWh/4zn8la",
          "token_type": "bearer"
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [{
                "type": "string"
              }, {
                "type": "integer"
              }]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/user/login"
          }
        }
      }
    }
  },
  "tags": [{
    "name": "user",
    "description": "Users api"
  }, {
    "name": "game_data",
    "description": "Game data api"
  }, {
    "name": "game",
    "description": "Game processing api"
  }]
}